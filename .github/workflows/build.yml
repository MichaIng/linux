name: VisionFive 2 kernel build
on: [workflow_dispatch, push]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions: {}
defaults:
  run:
    shell: sh
jobs:
  build:
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-22.04
    env:
      CROSS_COMPILE: 'riscv64-linux-gnu-'
      ARCH: 'riscv'
    steps:
    - name: Setup tmpfs
      run: sudo mount -t tmpfs -o "noatime,lazytime,uid=$(id -u),size=3G" tmpfs "$GITHUB_WORKSPACE"
    - uses: actions/checkout@v4
    - name: Install build dependencies
      run: |
        sudo apt-get -q update
        sudo DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -qq dist-upgrade
        sudo DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -qq install make gcc libc6-dev flex bison gcc-riscv64-linux-gnu bc libssl-dev
    - name: Build Linux
      run: |
        > .scmversion # Avoid Git commit version suffix
        mv dietpi_visionfive2_defconfig arch/riscv/configs/
        make dietpi_visionfive2_defconfig
        make -j$(nproc)
        make install INSTALL_PATH='linux-image-visionfive2/boot'
        make dtbs_install INSTALL_DTBS_PATH='linux-image-visionfive2/usr/lib/linux-image-visionfive2'
        find linux-image-visionfive2/usr/lib/linux-image-visionfive2 -mindepth 1 -regextype egrep \( ! -regex '.*/(starfive|vf2-overlay.*|jh7110-visionfive-v2.*\.dtb)' -o -regex '.*/jh7110-visionfive-v2-A1[01].dtb' \) -exec rm -Rf {} +
        make modules_install INSTALL_MOD_PATH='linux-image-visionfive2'
        rm linux-image-visionfive2/lib/modules/*/build linux-image-visionfive2/lib/modules/*/source
        # https://github.com/starfive-tech/buildroot/blob/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/starfive-firmware.mk
        mkdir -p linux-image-visionfive2/lib/firmware
        cd linux-image-visionfive2/lib/firmware
        curl -sSfO 'https://raw.githubusercontent.com/starfive-tech/buildroot/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/ap6256-bluetooth/BCM4345C5.hcd'
        curl -sSfO 'https://raw.githubusercontent.com/starfive-tech/buildroot/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/ap6256-sdio-wifi/fw_bcm43456c5_ag.bin'
        curl -sSfO 'https://raw.githubusercontent.com/starfive-tech/buildroot/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/ap6256-sdio-wifi/nvram_ap6256.txt'
        curl -sSfO 'https://raw.githubusercontent.com/starfive-tech/buildroot/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/rtl8852bu-bluetooth/rtl8852bu_config'
        curl -sSfO 'https://raw.githubusercontent.com/starfive-tech/buildroot/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/rtl8852bu-bluetooth/rtl8852bu_fw'
        curl -sSfO 'https://raw.githubusercontent.com/starfive-tech/buildroot/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/ECR6600U-usb-wifi/ECR6600U_transport.bin'
        svn export 'https://github.com/starfive-tech/buildroot/branches/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/aic8800-usb-wifi/aic8800'
        svn export 'https://github.com/starfive-tech/buildroot/branches/JH7110_VisionFive2_devel/package/starfive/starfive-firmware/aic8800-usb-wifi/aic8800DC'
        cd ../../..
        find linux-image-visionfive2 -type f \( -path linux-image-visionfive2/DEBIAN -prune \) -exec chmod 0644 {} +
        find linux-image-visionfive2 -type d -exec chmod 0755 {} +
    - name: Build package
      run: |
        echo 'Obtaining kernel and package version ...'
        kernelversion=$(make kernelversion)
        curl -fO 'https://dietpi.com/downloads/binaries/linux-image-visionfive2.deb'
        cur_version=$(dpkg-deb -f linux-image-visionfive2.deb Version)
        rm linux-image-visionfive2.deb
        cur_suffix=${cur_version#*-dietpi}
        echo "Current package version is : $cur_version"
        echo "New kernel version is      : $kernelversion"
        [ "$kernelversion-dietpi$cur_suffix" = "$cur_version" ] && version="$kernelversion-dietpi$((cur_suffix+1))" || version="$kernelversion-dietpi1"
        echo "New package version will be: $version"
        sed -i "s/VERSION/$kernelversion/g" linux-image-visionfive2/boot/extlinux/extlinux.conf linux-image-visionfive2/DEBIAN/p*
        find linux-image-visionfive2 ! \( -path linux-image-visionfive2/DEBIAN -prune \) -type f -exec md5sum {} + | sed 's|linux-image-visionfive2/||' > linux-image-visionfive2/DEBIAN/md5sums
        sed -i -e "s/VERSION/$version/" -e "s/DATE/$(date -u '+%a, %d %b %Y %T %z')/" -e "s/SIZE/$(du -sk 'linux-image-visionfive2' | mawk '{print $1}')/" linux-image-visionfive2/DEBIAN/control
        sudo chown -R 0:0 linux-image-visionfive2
        dpkg-deb -b -Zxz -z9 -Sextreme linux-image-visionfive2
        sudo rm -R linux-image-visionfive2
    - name: Upload
      run: |
        mkdir -p ~/.ssh
        umask 377
        echo '${{ secrets.KNOWN_HOSTS }}' > ~/.ssh/known_hosts
        echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_ed25519
        curl -T 'linux-image-visionfive2.deb' --key ~/.ssh/id_ed25519 '${{ secrets.UPLOAD_URL }}all/'
        curl 'https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/purge_cache' -H 'Authorization: Bearer ${{ secrets.CF_TOKEN }}' -H 'Content-Type: application/json' \
        --data '{"files":["https://dietpi.com/downloads/binaries/testing/","https://dietpi.com/downloads/binaries/testing/linux-image-visionfive2.deb"]}'
